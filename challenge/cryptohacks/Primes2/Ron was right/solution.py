from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
from Crypto.Util.number import *
from sympy import gcd
with open('keys_and_messages/21.pem') as f:
    key = RSA.importKey(f.read())

n = key.n
e = key.e
# for i in range(1,50):
# 	x = "keys_and_messages/"+str(i)+".pem"

# 	key1 = RSA.importKey(open(x).read())
# 	n1 = key1.n
# 	gcd_value = gcd(n,n1)
# 	if gcd_value > 1:
# 		print("[+] Founded GCD value")
# 		print("[+] Founded in "+x)
# 		print(gcd_value)
# [+] Founded GCD value
# [+] Founded in keys_and_messages/34.pem

p = 919031168254299342928662994540730760042229248845820491699169870943314884504551963184014786520812939038906152950817942941469675496074887272906954399256046690838233813273902630076899906873722574023918253104149453601408405078374008695616160025877687382663027910687942091698042309812910101246025081363544171351624307177908410700904833438480012985928358897861427063761678614898919524867442676631453135379994570031284289815099294504127712924001149921480778993635917803466637717023744788311275545126346774536416864472035644211758788016642401235014385037912224180351022196262011724157012443048941426178651665266181311662824205620324073087330858064769424755443807165558567191049013947419763315902476674266627953223373671797370373786249718677582213173537848582863398367624397247597103174897140005790273296171101569756006898658668311846034013183862374297777882433967015111727139360441681664840944403450472574336901043555319067050153928231938431298082827397506406624964952344826628463723499263165279281720105570577138817805451223334196017505528543229067732013216932022575286870744622250293712218581458417969597311485156075637589299870500738770767213366940656708757081771498126771190548298648709527029056697749965377697006723247968508680596118923

q = n//p

n2 = p*q

assert(n==n2)

phi = (p-1)*(q-1)

d = inverse(e,phi)

cipher = open("keys_and_messages/21.ciphertext").read()

ct = cipher.decode("hex")
keys = RSA.construct((n, e, d))

cipher = PKCS1_OAEP.new(keys)

m = cipher.decrypt(ct)
print(m)