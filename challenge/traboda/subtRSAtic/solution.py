from gmpy2 import iroot
from Crypto.Util.number import inverse,long_to_bytes
n=128172921989001536122515313731699084905138845898540195672409917938034001546757279760610355584941828434930484532753717346268408019163645412742678713444595005682243094570485451614479875126455422999037295963506675104335799368594898025481231615408915766944597193547363587848046829012097892989244662386820191230467
hint=3252345584613163060126911862830511124223903830013917418863526197749288329087544587985027377685936552348010909555433503510869417012445342511106250305826046
ct=11471129008767980436661295109643169994206771370409256366041980525124546731542738735701641755780589005767317548729332443906367888172678876139879578771759148506799663509568955170090528352175706423545848729692252305109869208787098465367381196612459968987048153610138927779984193146935565594080259535267334474235
e=65537 
# hint == (p-q)

hint2 = hint*hint

#hint2 == (p-q)^2

x = hint2 + (4*n)

x = iroot(x,2)[0]

# x == p+q

p = (hint+x) // 2

q = n // p

#print(n==p*q)

phi = (p-1)*(q-1)

d = inverse(e,phi)

m = pow(ct,d,n)

print(long_to_bytes(m))